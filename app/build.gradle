apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'koin'

// TODO: Will back to security for secret key
// https://guides.codepath.com/android/Storing-Secret-Keys-in-Android#:~:text=The%20Keystore%20API%20uses%20both,encrypt%20and%20decrypt%20the%20secrets.
// ** https://rammic.github.io/2015/07/28/hiding-secrets-in-android-apps/
// https://www.lordcodes.com/articles/protecting-secrets-in-an-android-project
def secretFile = rootProject.file("secretkey.properties")
def secretProperties = new Properties()
secretProperties.load(new FileInputStream(secretFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.megalabs.smartweather"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('keystore/debug.keystore')
            storePassword 'android'
        }

        // TODO: Will change this to production keystore for uploading to Google Play Store
        release {
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storeFile file('keystore/debug.keystore')
            storePassword 'android'
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }

        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            renderscriptOptimLevel 3
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    //Use kotlin LayoutContainer!!!
    androidExtensions {
        experimental = true
    }

    flavorDimensions "app"
    productFlavors {

        dev {
            dimension "app"

            signingConfig signingConfigs.debug
            versionName defaultConfig.versionName + "-DEVELOP"

            resValue "string", "app_name", "SmartWeather-Dev"

            buildConfigField("String", "API_ENDPOINT", '"https://api.openweathermap.org/"')
            buildConfigField("String", "API_APP_ID", secretProperties['API_APP_ID'])
            buildConfigField("Boolean", "IS_BUILD_DEBUG", "true")
        }

        prod {
            dimension "app"

            signingConfig signingConfigs.release
            resValue "string", "app_name", "SmartWeather"

            buildConfigField("String", "API_ENDPOINT", '"https://api.openweathermap.org/"')
            buildConfigField("String", "API_APP_ID", secretProperties['API_APP_ID'])
            buildConfigField("Boolean", "IS_BUILD_DEBUG", "false")
        }
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    ext {
        moshi_version = "1.9.3"
        ok_http_version = "4.9.0"
        retrofit_version = "2.9.0"
        rxjava_version = "3.0.4"
        rxjava_rxkotlin_version = "3.0.0"
        rxjava_rxandroid_version = "3.0.0"
        androidx_navigation_version = "2.3.0"
        arrow_version = '0.10.3'
        mockito_version = "2.21.0"

        kotlinx_coroutines = "1.3.7"
    }

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "androidx.navigation:navigation-fragment:$androidx_navigation_version"
    implementation "androidx.navigation:navigation-ui:$androidx_navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$androidx_navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$androidx_navigation_version"

    implementation 'com.google.android.material:material:1.2.1'

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$ok_http_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava3:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"

    //RX
    implementation "io.reactivex.rxjava3:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava3:rxkotlin:$rxjava_rxkotlin_version"
    implementation "io.reactivex.rxjava3:rxandroid:$rxjava_rxandroid_version"

    // Koin for Kotlin
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-core-ext:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-ext:$koin_version"

    // rxbinding
    implementation 'com.jakewharton.rxbinding4:rxbinding-core:4.0.0'

    // Material Dialogs
    implementation 'com.afollestad.material-dialogs:core:3.3.0'

    // Helpers
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation "io.arrow-kt:arrow-core:$arrow_version"

    // Root checker
    implementation 'com.scottyab:rootbeer-lib:0.0.8'

    // Testing
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    testImplementation "org.mockito:mockito-inline:$mockito_version"
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")

    debugImplementation("androidx.fragment:fragment-testing:1.2.5") {
        exclude group:'androidx.test', module:'monitor'
    }
    // Koin testing tools
    testImplementation "org.koin:koin-test:$koin_version"
    androidTestImplementation "org.koin:koin-test:$koin_version"

}